from re import T
from app.controller.scraping import extrair_dados, obter_categorias
from app.controller.eiprice_db import aplicar_banco, consultar
from fastapi import FastAPI, Response
from typing import Union
import pandas as pd


# Cria a tabela e adiciona a categoria.
#aplicar_banco(f"CREATE TABLE categoria (id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 42 CYCLE), nome varchar, primary key (id))")
#aplicar_banco(f"INSERT INTO categoria (nome) SELECT 'alimentos' WHERE NOT EXISTS (SELECT * FROM categoria WHERE nome = 'alimentos')")


# Chama a função para realizar o scraping e armazenas no banco de dados
#extrair_dados(obter_categorias("alimentos", "*", "*"))

app = FastAPI()

@app.get("/")
async def root():
    dados_recebido = consultar(f"select nome from categoria")
    df = pd.DataFrame(dados_recebido, columns=['nome'])
    return Response(df.to_json(), media_type="application/json")

@app.get("/seller")
async def seller():
    df = pd.DataFrame(consultar("select categoria.nome, sub_categoria.nome, produto.id, produto.nome, produto.img, produto.valor, produto.desconto, produto.dt_hora from produto inner join sub_categoria on sub_categoria.id = produto.id_sub_categoria inner join categoria on categoria.id = sub_categoria.id_categoria"), columns =['categoria', 'departamento', 'id', 'nome', 'img', 'valor', 'desconto', 'data_hora'])
    df.to_csv('seller.csv')
    dd = df.to_dict('records')
    return dd
    

@app.get("/categoria/{categoria_nome}")
def read_item(categoria_nome: str):
    dados_recebido = consultar(f"select distinct(nome) from categoria where nome = '{categoria_nome}'")
    df = pd.DataFrame(dados_recebido, columns=['nome'])
    return Response(df.to_json(), media_type="application/json")


@app.get("/categoria/departamento/")
def read_item():
    dados_recebido = consultar(f"select id, nome from sub_categoria")
    df = pd.DataFrame(dados_recebido, columns=['id', 'nome'])
    df = df.set_index("id")
    return Response(df.to_json(), media_type="application/json")

@app.get("/categoria/departamento/{departamento_nome}")
def read_item(departamento_nome: str):
    dados_recebido = consultar(f"select id, nome from sub_categoria where nome = '{departamento_nome}'")
    df = pd.DataFrame(dados_recebido, columns=['nome'])
    return Response(df.to_json(), media_type="application/json")
 

